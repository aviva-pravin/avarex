name: Flutter CI

on: push

jobs:

  build-and-release-android:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.19.0'

      - name: Find and Replace OpenAIP
        uses: jacobtomlinson/gha-find-replace@v3
        with:
          find: "@@___openaip_client_id__@@"
          replace: ${{ secrets.OPENAIP_CLIENT_ID }}
          include: "*.dart"
          regex: false

      - name: Install project dependencies
        run: flutter pub get
      - name: Build artifacts
        run: flutter build apk --release

      - name: Sign APK with keystore
        uses: r0adkll/sign-android-release@v1
        id: sign_app
        with:
          releaseDirectory: build/app/outputs/apk/release
          signingKeyBase64: ${{ secrets.KEY_STORE }}
          alias: ${{ secrets.KEY_STORE_ALIAS }}
          keyStorePassword: ${{ secrets.KEY_STORE_PASS }}
          keyPassword: ${{ secrets.KEY_STORE_PASS }}
        env:
          BUILD_TOOLS_VERSION: "34.0.0"

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: Android.apk
          path: ${{steps.sign_app.outputs.signedReleaseFile}}

  build-and-release-linux:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.19.0'
      - name: Update source repo
        run: sudo apt-get update
      - name: Pre-empt libunwind issue for gstreamer
        run: sudo apt-get install -y libunwind-dev
      - name: Install audioplayers dependencies
        run: sudo apt-get install -y libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev
      - name: Install dependencies
        run: sudo apt-get install -y clang cmake ninja-build pkg-config libgtk-3-dev liblzma-dev
      - name: Install project dependencies
        run: flutter pub get
      - name: Build artifacts
        run: flutter build linux --release
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: ${{github.ref_name}}-linux.zip
          directory: build/linux/x64/release/bundle
      - name: Linux Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/linux/x64/release/bundle/${{github.ref_name}}-linux.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Linux
          path: build/linux/x64/release/bundle/${{github.ref_name}}-linux.zip

  build-and-release-windows:
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.19.0'
      - name: Install project dependencies
        run: flutter pub get
      - name: Build artifacts
        run: flutter build windows --release
      - name: Build artifacts MSIX
        run: dart run msix:create
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: ${{github.ref_name}}-windows.zip
          directory: build/windows/x64/runner/Release      
      - name: Windows Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/windows/x64/runner/Release/${{github.ref_name}}-windows.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: WindowsX64
          path: build/windows/x64/runner/Release/${{github.ref_name}}-windows.zip

  build-and-release-macos:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.19.0'
      - name: Install project dependencies
        run: flutter pub get
      - name: Build artifacts
        run: flutter build macos --release
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: ${{github.ref_name}}-macos.zip
          directory: build/macos/Build/Products/Release
      - name: macOS Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/macos/Build/Products/Release/${{github.ref_name}}-macos.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MacOS
          path: build/macos/Build/Products/Release/${{github.ref_name}}-macos.zip

  build-and-release-ios:
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.19.0'
      - name: Install project dependencies
        run: flutter pub get
      - name: Build artifacts
        uses: cedvdb/action-flutter-build-ios@v1
        with:
          # always use --export-options-plist=ios/GithubActionsExportOptions.plist
          build-cmd: flutter build ipa --release --export-options-plist=ios/GithubActionsExportOptions.plist
          certificate-base64: ${{ secrets.IOS_BUILD_CERTIFICATE_BASE64 }}
          certificate-password: ${{ secrets.IOS_BUILD_CERTIFICATE_PASSWORD }}
          provisioning-profile-base64: ${{ secrets.IOS_MOBILE_PROVISIONING_PROFILE_BASE64 }}
          keychain-password: ${{ secrets.IOS_GITHUB_KEYCHAIN_PASSWORD }}
      - name: Archive Release
        uses: thedoctor0/zip-release@master
        with:
          type: 'zip'
          filename: ${{github.ref_name}}-ios.zip
          directory: build/ios/ipa
      - name: iOS Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: build/ios/ipa/${{github.ref_name}}-ios.zip
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: iOS
          path: build/ios/ipa/${{github.ref_name}}-ios.zip

